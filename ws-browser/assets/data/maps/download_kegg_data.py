#!/usr/bin/env python

import os
import urllib2
import urllib
import sys


map_ids = ['00281', '00522', '00640', '00907pr', '01130', '03060', '04520', '05060',
'00290', '00523', '00641', '00907pu', '01140', '03070', '04530', '05110',
'00300', '00530', '00642', '00907sc', '01150', '03080', '04540', '05111',
'00310', '00531', '00643', '00907th', '01160', '03090', '04610', '05120',
'00010', '00311', '00532', '00650', '00908', '01170', '03320', '04612', '05130',
'00020', '00312', '00533', '00660', '00910', '01180', '03410', '04614', '05131',
'00030', '00330', '00534', '00670', '00920', '01190', '03420', '04620', '05210',
'00031', '00331', '00540', '00680', '00930', '01195', '03430', '04630', '05211',
'00040', '00340', '00550', '00710', '00940', '01196', '03440', '04640', '05212',
'00051', '00350', '00561', '00720', '00941', '01330', '03450', '04650', '05213',
'00052', '00351', '00562', '00730', '00942', '01430', '04010', '04650mmu', '05214',
'00053', '00360', '00563', '00740', '00943', '01430hsa', '04010dme', '04660', '05215',
'00061', '00361', '00564', '00750', '00944', '01510', '04010sce', '04662', '05216',
'00062', '00362', '00565', '00760', '00950', '02010', '04012', '04664', '05217',
'00071', '00363', '00590', '00770', '00960', '02011ana', '04020', '04670', '05218',
'00072', '00364', '00591', '00780', '00970', '02011bha', '04060', '04710', '05219',
'00100', '00380', '00592', '00785', '00980', '02011bsu', '04070', '04710ath','05220',
'00120', '00400', '00600', '00790', '00981', '02011eco', '04080', '04710dme','05221',
'00130', '00401', '00601', '00791', '00982', '02011hin', '04110', '04720', '05222',
'00140', '00402', '00602', '00830', '00983', '02011pae', '04111', '04730', '05223',
'00150', '00410', '00603', '00860', '01010', '02011syn', '04115', '04740', '05310',
'00190', '00430', '00604', '00900', '01030', '02011vch', '04120', '04742', '05320',
'00195', '00440', '00620', '00901', '01031', '02020', '04130', '04810', '05322',
'00196', '00450', '00621', '00902', '01032', '02021bsu', '04140', '04910', '05330',
'00220', '00460', '00622', '00903', '01040', '02021eco', '04150', '04912', '05332',
'00230', '00471', '00623', '00904', '01051', '02021sce', '04210', '04914', '05340',
'00231', '00472', '00624', '00905', '01052', '02021syn', '04310', '04916',
'00232', '00473', '00625', '00906', '01053', '02030', '04320', '04920',
'00240', '00480', '00626', '00907ar', '01054', '02031', '04330', '04930',
'00251', '00500', '00627', '00907ca', '01055', '02040', '04340', '04940',
'00252', '00510', '00628', '00907cg', '01056', '02060', '04350', '04950',
'00253', '00511', '00629', '00907cs', '01057', '03010', '04360', '05010',
'00260', '00512', '00630', '00907gr', '01058', '03020', '04370', '05020',
'00271', '00513', '00631', '00907he', '01100', '03022', '04510', '05030',
'00272', '00520', '00632', '00907pb', '01110', '03030', '04512', '05040',
'00280', '00521', '00633', '00907pl', '01120', '03050', '04514', '05050']


#00031  
#00220
#00240
#00251

def find_none_existant():
    skipped = []
    for map_id in map_ids:

        url = "http://www.genome.jp/kegg/pathway/map/map"+map_id+".png"        
        req = urllib2.Request(url)

        try:
            urllib2.urlopen(req)
        except urllib2.HTTPError, e:
             sys.stderr.write("Warning ["+str(e.code)+"] : could not find map: "+map_id)
             sys.stderr.write("\n")
             skipped.append(map_id)

    return skipped    

def get_imgs(skip):
    os.mkdir('img')
    for map_id in map_ids:
        if map_id in skip: 
            sys.stderr.write("Warning: skipped .png for map: "+map_id+"\n")
            continue

        url = "http://www.genome.jp/kegg/pathway/map/map"+map_id+".png"        
        req = urllib2.Request(url)

        print 'retriving .png for map: map'+map_id
        try:
            urllib2.urlopen(req)
            urllib.urlretrieve(url,'img/map'+map_id+'.png')            
        except urllib2.HTTPError, e:
             sys.stderr.write("Warning ["+str(e.code)+"] : cound not find .png for map: "+map_id)
             sys.stderr.write("\n")



def get_xml(skip):
    os.mkdir('xml')
    for map_id in map_ids:
        if map_id in skip: 
            sys.stderr.write("Warning: skipped .xml for map: "+map_id+"\n")
            continue

        url = "http://www.genome.jp/kegg-bin/download?entry=ec"+map_id+"&amp;format=kgml"
        req = urllib2.Request(url)

        print 'retriving xml for map: map'+map_id

        try:
            urllib2.urlopen(req)
            urllib.urlretrieve(url,'xml/map'+map_id+'.xml')   
        except urllib2.HTTPError, e:
             sys.stderr.write("Warning ["+str(e.code)+"] : cound not find .xml for map: "+map_id)
             sys.stderr.write("\n")



if __name__ == "__main__":

    skipped = find_none_existant()
    #get_imgs(skipped)
    get_xml(skipped)

    # to delete empty files, you can run something like: find . -type f -size 1 -delete

    print "done."









